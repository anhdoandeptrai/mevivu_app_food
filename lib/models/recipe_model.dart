import 'package:hive/hive.dart';

part 'recipe_model.g.dart'; // Will be generated by build_runner

@HiveType(typeId: 0)
class Recipe extends HiveObject {
  @HiveField(0)
  String? idMeal;

  @HiveField(1)
  String? strMeal;

  @HiveField(2)
  String? strCategory;

  @HiveField(3)
  String? strArea;

  @HiveField(4)
  String? strInstructions;

  @HiveField(5)
  String? strMealThumb;

  @HiveField(6)
  String? strTags;

  @HiveField(7)
  String? strYoutube;

  // Add all ingredient fields
  @HiveField(8)
  String? strIngredient1;
  @HiveField(9)
  String? strIngredient2;
  @HiveField(10)
  String? strIngredient3;
  @HiveField(11)
  String? strIngredient4;
  @HiveField(12)
  String? strIngredient5;
  @HiveField(13)
  String? strIngredient6;
  @HiveField(14)
  String? strIngredient7;
  @HiveField(15)
  String? strIngredient8;
  @HiveField(16)
  String? strIngredient9;
  @HiveField(17)
  String? strIngredient10;
  @HiveField(18)
  String? strIngredient11;
  @HiveField(19)
  String? strIngredient12;
  @HiveField(20)
  String? strIngredient13;
  @HiveField(21)
  String? strIngredient14;
  @HiveField(22)
  String? strIngredient15;
  @HiveField(23)
  String? strIngredient16;
  @HiveField(24)
  String? strIngredient17;
  @HiveField(25)
  String? strIngredient18;
  @HiveField(26)
  String? strIngredient19;
  @HiveField(27)
  String? strIngredient20;

  // Add all measure fields
  @HiveField(28)
  String? strMeasure1;
  @HiveField(29)
  String? strMeasure2;
  @HiveField(30)
  String? strMeasure3;
  @HiveField(31)
  String? strMeasure4;
  @HiveField(32)
  String? strMeasure5;
  @HiveField(33)
  String? strMeasure6;
  @HiveField(34)
  String? strMeasure7;
  @HiveField(35)
  String? strMeasure8;
  @HiveField(36)
  String? strMeasure9;
  @HiveField(37)
  String? strMeasure10;
  @HiveField(38)
  String? strMeasure11;
  @HiveField(39)
  String? strMeasure12;
  @HiveField(40)
  String? strMeasure13;
  @HiveField(41)
  String? strMeasure14;
  @HiveField(42)
  String? strMeasure15;
  @HiveField(43)
  String? strMeasure16;
  @HiveField(44)
  String? strMeasure17;
  @HiveField(45)
  String? strMeasure18;
  @HiveField(46)
  String? strMeasure19;
  @HiveField(47)
  String? strMeasure20;

  Recipe({
    this.idMeal,
    this.strMeal,
    this.strCategory,
    this.strArea,
    this.strInstructions,
    this.strMealThumb,
    this.strTags,
    this.strYoutube,
    this.strIngredient1,
    this.strIngredient2,
    this.strIngredient3,
    this.strIngredient4,
    this.strIngredient5,
    this.strIngredient6,
    this.strIngredient7,
    this.strIngredient8,
    this.strIngredient9,
    this.strIngredient10,
    this.strIngredient11,
    this.strIngredient12,
    this.strIngredient13,
    this.strIngredient14,
    this.strIngredient15,
    this.strIngredient16,
    this.strIngredient17,
    this.strIngredient18,
    this.strIngredient19,
    this.strIngredient20,
    this.strMeasure1,
    this.strMeasure2,
    this.strMeasure3,
    this.strMeasure4,
    this.strMeasure5,
    this.strMeasure6,
    this.strMeasure7,
    this.strMeasure8,
    this.strMeasure9,
    this.strMeasure10,
    this.strMeasure11,
    this.strMeasure12,
    this.strMeasure13,
    this.strMeasure14,
    this.strMeasure15,
    this.strMeasure16,
    this.strMeasure17,
    this.strMeasure18,
    this.strMeasure19,
    this.strMeasure20,
  });

  factory Recipe.fromJson(Map<String, dynamic> json) {
    return Recipe(
      idMeal: json['idMeal'],
      strMeal: json['strMeal'],
      strCategory: json['strCategory'],
      strArea: json['strArea'],
      strInstructions: json['strInstructions'],
      strMealThumb: json['strMealThumb'],
      strTags: json['strTags'],
      strYoutube: json['strYoutube'],
      strIngredient1: json['strIngredient1'],
      strIngredient2: json['strIngredient2'],
      strIngredient3: json['strIngredient3'],
      strIngredient4: json['strIngredient4'],
      strIngredient5: json['strIngredient5'],
      strIngredient6: json['strIngredient6'],
      strIngredient7: json['strIngredient7'],
      strIngredient8: json['strIngredient8'],
      strIngredient9: json['strIngredient9'],
      strIngredient10: json['strIngredient10'],
      strIngredient11: json['strIngredient11'],
      strIngredient12: json['strIngredient12'],
      strIngredient13: json['strIngredient13'],
      strIngredient14: json['strIngredient14'],
      strIngredient15: json['strIngredient15'],
      strIngredient16: json['strIngredient16'],
      strIngredient17: json['strIngredient17'],
      strIngredient18: json['strIngredient18'],
      strIngredient19: json['strIngredient19'],
      strIngredient20: json['strIngredient20'],
      strMeasure1: json['strMeasure1'],
      strMeasure2: json['strMeasure2'],
      strMeasure3: json['strMeasure3'],
      strMeasure4: json['strMeasure4'],
      strMeasure5: json['strMeasure5'],
      strMeasure6: json['strMeasure6'],
      strMeasure7: json['strMeasure7'],
      strMeasure8: json['strMeasure8'],
      strMeasure9: json['strMeasure9'],
      strMeasure10: json['strMeasure10'],
      strMeasure11: json['strMeasure11'],
      strMeasure12: json['strMeasure12'],
      strMeasure13: json['strMeasure13'],
      strMeasure14: json['strMeasure14'],
      strMeasure15: json['strMeasure15'],
      strMeasure16: json['strMeasure16'],
      strMeasure17: json['strMeasure17'],
      strMeasure18: json['strMeasure18'],
      strMeasure19: json['strMeasure19'],
      strMeasure20: json['strMeasure20'],
    );
  }

  get strDuration => null;

  // Convert to JSON for API requests if needed
  Map<String, dynamic> toJson() {
    return {
      'idMeal': idMeal,
      'strMeal': strMeal,
      'strCategory': strCategory,
      'strArea': strArea,
      'strInstructions': strInstructions,
      'strMealThumb': strMealThumb,
      'strTags': strTags,
      'strYoutube': strYoutube,
      'strIngredient1': strIngredient1,
      'strIngredient2': strIngredient2,
      'strIngredient3': strIngredient3,
      'strIngredient4': strIngredient4,
      'strIngredient5': strIngredient5,
      'strIngredient6': strIngredient6,
      'strIngredient7': strIngredient7,
      'strIngredient8': strIngredient8,
      'strIngredient9': strIngredient9,
      'strIngredient10': strIngredient10,
      'strIngredient11': strIngredient11,
      'strIngredient12': strIngredient12,
      'strIngredient13': strIngredient13,
      'strIngredient14': strIngredient14,
      'strIngredient15': strIngredient15,
      'strIngredient16': strIngredient16,
      'strIngredient17': strIngredient17,
      'strIngredient18': strIngredient18,
      'strIngredient19': strIngredient19,
      'strIngredient20': strIngredient20,
      'strMeasure1': strMeasure1,
      'strMeasure2': strMeasure2,
      'strMeasure3': strMeasure3,
      'strMeasure4': strMeasure4,
      'strMeasure5': strMeasure5,
      'strMeasure6': strMeasure6,
      'strMeasure7': strMeasure7,
      'strMeasure8': strMeasure8,
      'strMeasure9': strMeasure9,
      'strMeasure10': strMeasure10,
      'strMeasure11': strMeasure11,
      'strMeasure12': strMeasure12,
      'strMeasure13': strMeasure13,
      'strMeasure14': strMeasure14,
      'strMeasure15': strMeasure15,
      'strMeasure16': strMeasure16,
      'strMeasure17': strMeasure17,
      'strMeasure18': strMeasure18,
      'strMeasure19': strMeasure19,
      'strMeasure20': strMeasure20,
    };
  }

  // Helper method to get all ingredients with measures
  List<Map<String, String>> getIngredientsWithMeasures() {
    List<Map<String, String>> result = [];

    if (strIngredient1 != null && strIngredient1!.trim().isNotEmpty)
      result.add({'ingredient': strIngredient1!, 'measure': strMeasure1 ?? ''});

    if (strIngredient2 != null && strIngredient2!.trim().isNotEmpty)
      result.add({'ingredient': strIngredient2!, 'measure': strMeasure2 ?? ''});

    if (strIngredient3 != null && strIngredient3!.trim().isNotEmpty)
      result.add({'ingredient': strIngredient3!, 'measure': strMeasure3 ?? ''});

    if (strIngredient4 != null && strIngredient4!.trim().isNotEmpty)
      result.add({'ingredient': strIngredient4!, 'measure': strMeasure4 ?? ''});

    if (strIngredient5 != null && strIngredient5!.trim().isNotEmpty)
      result.add({'ingredient': strIngredient5!, 'measure': strMeasure5 ?? ''});

    // Add similar entries for ingredients 6-20

    return result;
  }
}
